{"version":3,"sources":["components/Button/index.tsx","modules/Assignment1/index.tsx","services/configApi.tsx","services/assignment2/assignment2API.tsx","modules/Assignment2/components/NextButton/index.tsx","modules/Assignment2/components/PrevButton/index.tsx","modules/Assignment2/components/DecrementButton/index.tsx","modules/Assignment2/components/IncrementButton/index.tsx","modules/Assignment2/components/PageNumber/index.tsx","modules/Assignment2/index.tsx","routers/routes.tsx","routers/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","children","onClick","className","Assignment1","useState","count","setCount","e","preventDefault","handleCount","handleResetCount","APIInstance","axios","create","baseURL","process","interceptors","response","use","data","error","getEmployees","a","get","res","NextButton","isNextBtnActive","id","PrevButton","isPrevBtnActive","DecrementButton","lowerPageBound","IncrementButton","pageNumbers","upperPageBound","PageNumber","currentPage","Array","from","length","_","i","map","number","event","initPagination","todos","todosPerPage","pageBound","Assignment2","pagination","setPagination","useEffect","fetchEmployees","setPrevAndNextBtnClass","listid","paginationFlag","totalPage","Math","ceil","indexOfLastTodo","indexOfFirstTodo","slice","user","idx","name","email","position","handleClickPage","routes","Routes","path","component","App","href","target","alt","src","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eca51791.chunk.js","sourcesContent":["import React from 'react';\nimport './styles.scss'\n\ninterface IButton {\n  children: React.ReactChild,\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void,\n  className?: string\n}\n\nconst Button: React.FC<IButton> = ({\n  children,\n  onClick,\n  className\n}) => {\n  return (\n    <button className={`root ${className}`} onClick={onClick}>{children}</button>\n  )\n}\n\nexport default Button","import React, { useState, MouseEvent } from \"react\";\nimport { Button } from 'components'\nimport './styles.scss'\n\nconst Assignment1: React.FC = () => {\n  const [count, setCount] = useState<number>(0)\n\n  const handleCount = (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    setCount(count + 1)\n  }\n\n  const handleResetCount = (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    setCount(0)\n  }\n\n  return (\n    <div className=\"containerAssg1\">\n      <div className=\"containerAssg1--result\">Result: {count}</div>\n      <div className=\"containerAssg1--button\">\n        <Button className=\"custom\" onClick={(e) => handleCount(e)}>+1</Button>\n        <Button className=\"custom\" onClick={(e) => handleResetCount(e)}>Reset</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default Assignment1;","import axios from 'axios';\n\nconst APIInstance = axios.create({\n  baseURL: process.env.REACT_APP_HELLO_HEALTH_API,\n})\n\nAPIInstance.interceptors.response.use(\n  response => {\n    if (response && response.data) {\n      return response.data;\n    }\n    return response;\n  },\n  error => {\n    throw error;\n  }\n)\n\nexport default APIInstance;","import APIInstance from '../configApi';\nimport { IListEmployees } from 'models/assignment2'\nimport { AxiosResponse, AxiosStatic } from \"axios\";\n\n\n\nexport const getEmployees = async () => {\n  const res = await APIInstance.get<IListEmployees[]>(`${process.env.REACT_APP_HELLO_HEALTH_API}/employees`)\n  return res\n}","import React from 'react';\n\ninterface INextButton {\n  isNextBtnActive: string,\n  onClick: () => void,\n}\n\nconst NextButton: React.FC<INextButton> = ({ isNextBtnActive, onClick }) => {\n  return (\n    <>\n      {\n        isNextBtnActive === 'disabled'\n          ?\n          <div className={isNextBtnActive}>\n            <button id=\"btnNext\"> Next </button>\n          </div>\n          :\n          <div className={isNextBtnActive}>\n            <button id=\"btnNext\" onClick={onClick}> Next </button>\n          </div>\n      }\n    </>\n  )\n}\n\nexport default NextButton","import React from 'react';\n\ninterface IPrevButton {\n  isPrevBtnActive: string,\n  onClick: () => void,\n}\n\nconst PrevButton: React.FC<IPrevButton> = ({ isPrevBtnActive, onClick }) => {\n  return (\n    <>\n      {\n        isPrevBtnActive === 'disabled'\n          ?\n          <div className={isPrevBtnActive}>\n            <button id=\"btnPrev\"> Prev </button>\n          </div>\n          :\n          <div className={isPrevBtnActive}>\n            <button id=\"btnPrev\" onClick={onClick}> Prev </button>\n          </div>\n      }\n    </>\n  )\n}\n\nexport default PrevButton","import React from 'react';\n\ninterface IDecrementButton {\n  lowerPageBound: number,\n  onClick: () => void,\n}\n\nconst DecrementButton: React.FC<IDecrementButton> = ({ lowerPageBound, onClick }) => {\n  return (\n    <>\n      {\n        lowerPageBound >= 1 &&\n        <div className=''>\n          <button onClick={onClick}> &hellip; </button>\n        </div>\n      }\n    </>\n  )\n}\n\nexport default DecrementButton","import React from 'react';\n\ninterface IIncrementButton {\n  pageNumbers: number,\n  onClick: () => void,\n  upperPageBound: number,\n}\n\nconst IncrementButton: React.FC<IIncrementButton> = ({ pageNumbers, upperPageBound, onClick }) => {\n  return (\n    <>\n      {\n        pageNumbers > upperPageBound &&\n        <div className=''>\n          <button onClick={onClick}> &hellip; </button>\n        </div>\n      }\n    </>\n  )\n}\n\nexport default IncrementButton","import React, { MouseEvent } from 'react';\n\ninterface IPageNumber {\n  upperPageBound: number,\n  onClick: (event: MouseEvent<HTMLButtonElement>, number) => void,\n  pageNumbers: number,\n  currentPage: number,\n  lowerPageBound: number,\n}\n\n// Array.from({length: 10}, (_, i) => i + 1)\n\nconst PageNumber: React.FC<IPageNumber> = ({ \n  pageNumbers, \n  onClick , \n  currentPage, \n  upperPageBound,\n  lowerPageBound,\n}) => {\n  return (\n    <>\n      {Array.from({length: pageNumbers}, (_, i) => i + 1).map((number) => {\n        return (\n          (number === 1 && currentPage === 1) ?\n            <div key={number} className='active' id={`${number}`}>\n              <button id={`${number}`} onClick={(event) => onClick(event, number)}>{number}</button>\n            </div>\n            :\n            ((number < upperPageBound + 1) && number > lowerPageBound) &&\n            <div key={number} id={`${number}`} className={`${currentPage === number ? 'active' : ''}`}>\n              <button id={`${number}`} onClick={(event) => onClick(event, number)}>{number}</button>\n            </div>\n        )\n      })\n      }\n    </>\n  )\n}\n\nexport default PageNumber","import React, { useEffect, useState, MouseEvent } from \"react\";\nimport { getEmployees } from 'services/assignment2/assignment2API'\nimport './styles.scss';\nimport NextButton from './components/NextButton';\nimport PrevButton from './components/PrevButton';\nimport DecrementButton from './components/DecrementButton';\nimport IncrementButton from './components/IncrementButton';\nimport PageNumber from './components/PageNumber';\n\ninterface IListEmployees {\n  id: string;\n  createdAt: string;\n  name: string;\n  email: string;\n  position: string;\n}\n\ninterface IPagination {\n  todos: IListEmployees[],\n  currentPage: number,\n  todosPerPage: number,\n  upperPageBound: number,\n  lowerPageBound: number,\n  isPrevBtnActive: string,\n  isNextBtnActive: string,\n  pageBound: number,\n}\n\nconst initPagination: IPagination = {\n  todos: [],\n  currentPage: 1,\n  todosPerPage: 5,\n  upperPageBound: 3,\n  lowerPageBound: 0,\n  isPrevBtnActive: 'disabled',\n  isNextBtnActive: '',\n  pageBound: 3\n}\n\nconst Assignment2: React.FC = () => {\n  const [pagination, setPagination] = useState(initPagination)\n  const [selectPage, setSelectPage] = useState<number>(1)\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      let fetchEmployees: any = await getEmployees()\n      setPagination({\n        ...pagination,\n        todos: fetchEmployees\n      })\n    }\n\n    fetchEmployees()\n  }, [])\n\n  const setPrevAndNextBtnClass = (listid, paginationFlag) => {\n    // let paginationFlag = { ...pagination }\n    let totalPage = Math.ceil(pagination.todos.length / pagination.todosPerPage);\n    paginationFlag = {\n      ...paginationFlag,\n      isNextBtnActive: 'disabled',\n      isPrevBtnActive: 'disabled',\n    }\n    if (totalPage === listid && totalPage > 1) {\n      paginationFlag = {\n        ...paginationFlag,\n        isPrevBtnActive: '',\n      }\n    }\n    else if (listid === 1 && totalPage > 1) {\n      paginationFlag = {\n        ...paginationFlag,\n        isNextBtnActive: '',\n      }\n    }\n    else if (totalPage > 1) {\n      paginationFlag = {\n        ...paginationFlag,\n        isPrevBtnActive: '',\n        isNextBtnActive: '',\n      }\n    }\n    setPagination({ ...paginationFlag })\n  }\n\n  const btnPrevClick = () => {\n    let paginationFlag = { ...pagination }\n    if ((pagination.currentPage - 1) % pagination.pageBound === 0) {\n      paginationFlag = {\n        ...paginationFlag,\n        upperPageBound: pagination.upperPageBound - pagination.pageBound,\n        lowerPageBound: pagination.lowerPageBound - pagination.pageBound\n      }\n    }\n    let listid = pagination.currentPage - 1;\n    paginationFlag = {\n      ...paginationFlag,\n      currentPage: listid,\n    }\n    // setPagination({...paginationFlag})\n    setPrevAndNextBtnClass(listid, paginationFlag);\n  }\n\n  const btnNextClick = () => {\n    let paginationFlag = { ...pagination }\n    if ((pagination.currentPage + 1) > pagination.upperPageBound) {\n      paginationFlag = {\n        ...paginationFlag,\n        upperPageBound: pagination.upperPageBound + pagination.pageBound,\n        lowerPageBound: pagination.lowerPageBound + pagination.pageBound\n      }\n    }\n    let listid = pagination.currentPage + 1;\n    paginationFlag = {\n      ...paginationFlag,\n      currentPage: listid,\n    }\n    // setPagination({...paginationFlag})\n    setPrevAndNextBtnClass(listid, paginationFlag);\n  }\n\n  const btnDecrementClick = () => {\n    let paginationFlag = { ...pagination }\n    paginationFlag = {\n      ...paginationFlag,\n      upperPageBound: pagination.upperPageBound - pagination.pageBound,\n      lowerPageBound: pagination.lowerPageBound - pagination.pageBound,\n    }\n    let listid = pagination.upperPageBound - pagination.pageBound;\n    paginationFlag = {\n      ...paginationFlag,\n      currentPage: listid,\n    }\n    // setPagination({...paginationFlag})\n    setPrevAndNextBtnClass(listid, paginationFlag);\n  }\n\n  const btnIncrementClick = () => {\n    let paginationFlag = { ...pagination }\n    paginationFlag = {\n      ...paginationFlag,\n      upperPageBound: pagination.upperPageBound + pagination.pageBound,\n      lowerPageBound: pagination.lowerPageBound + pagination.pageBound,\n    }\n    let listid = pagination.upperPageBound + 1;\n    paginationFlag = {\n      ...paginationFlag,\n      currentPage: listid,\n    }\n    // setPagination({...paginationFlag})\n    setPrevAndNextBtnClass(listid, paginationFlag);\n  }\n\n  const handleClickPage = (event: MouseEvent<HTMLButtonElement>, number: number) => {\n    let paginationFlag = { ...pagination }\n    let listid = number;\n    // setSelectPage\n    paginationFlag = {\n      ...paginationFlag,\n      currentPage: listid,\n    }\n    // setPagination({...paginationFlag})\n    // $(\"ul li.active\").removeClass('active');\n    // $('ul li#'+listid).addClass('active');\n    setPrevAndNextBtnClass(listid, paginationFlag);\n  }\n\n  const indexOfLastTodo = pagination.currentPage * pagination.todosPerPage;\n  const indexOfFirstTodo = indexOfLastTodo - pagination.todosPerPage;\n\n  return (\n    <div className=\"container\">\n      {pagination.todos.length !== 0 &&\n        <>\n          <div className=\"container--table\">\n            <table className=\"container--table__employee\">\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>Position</th>\n                </tr>\n              </thead>\n              <tbody>\n                {pagination.todos.slice(indexOfFirstTodo, indexOfLastTodo).map((user, idx) => {\n                  return (\n                    <tr key={idx}>\n                      <td>{user.name}</td>\n                      <td>{user.email}</td>\n                      <td>{user.position}</td>\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </table>\n          </div>\n          <div className=\"container--pagination\">\n            <PrevButton\n              isPrevBtnActive={pagination.isPrevBtnActive}\n              onClick={btnPrevClick}\n            />\n            <DecrementButton\n              lowerPageBound={pagination.lowerPageBound}\n              onClick={btnDecrementClick}\n            />\n            <PageNumber\n              pageNumbers={Math.ceil(pagination.todos.length / pagination.todosPerPage)}\n              upperPageBound={pagination.upperPageBound}\n              onClick={(event, number) => handleClickPage(event, number)}\n              currentPage={pagination.currentPage}\n              lowerPageBound={pagination.lowerPageBound}\n            />\n            <IncrementButton\n              pageNumbers={Math.ceil(pagination.todos.length / pagination.todosPerPage)}\n              upperPageBound={pagination.upperPageBound}\n              onClick={btnIncrementClick}\n            />\n            <NextButton\n              isNextBtnActive={pagination.isNextBtnActive}\n              onClick={btnNextClick}\n            />\n          </div>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default Assignment2;","interface typeRoutes {\n  assignment1: string;\n  assignment2: string;\n}\n\nexport const routes: typeRoutes = {\n  assignment1: '/assignment1',\n  assignment2: '/assignment2',\n}","import React from \"react\";\nimport {  \n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Assignment1 from 'modules/Assignment1';\nimport Assignment2 from 'modules/Assignment2';\nimport { routes } from './routes';\n\n\nconst Routes: React.FC = () => {\n  return (\n    <Switch>\n      <Route path={routes.assignment1} component={Assignment1}/>\n      <Route path={routes.assignment2} component={Assignment2}/>\n    </Switch>\n  )\n}\n\nexport default Routes;","import React from 'react';\nimport logo from './logo.svg';\nimport {  \n  BrowserRouter as Router,\n  Link,\n} from 'react-router-dom';\nimport './App.scss';\nimport Routes from 'routers';\n\n\nfunction App() {\n  \n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"App--header\">\n          <div className=\"App--image\">\n            <a href=\"https://hellohealthgroup.com/vietnam/\" target=\"_blank\">\n              <img alt=\"hello-health\" src=\"https://hellohealthgroup.com/app/themes/hhg/public/img/site-logo.png\"/>\n            </a>\n          </div>\n          <div className=\"App--menu\">\n            <Link to=\"/assignment1\">Assignment1</Link>\n            <Link to=\"/assignment2\">Assignment2</Link>\n          </div>\n        </div>\n        <Routes/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}